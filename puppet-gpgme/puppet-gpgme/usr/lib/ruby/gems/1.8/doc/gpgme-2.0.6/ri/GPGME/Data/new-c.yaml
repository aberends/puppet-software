--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: We implement +self.new+ instead of initialize because objects are actually instantiated through the C API with stuff like <tt>gpgme_data_new</tt>.
- !ruby/struct:SM::Flow::P 
  body: We try to create a {GPGME::Data} smartly depending on the object passed, and if another {GPGME::Data} object is passed, it just returns it, so when in doubt, you can always pass a {GPGME::Data} object.
- !ruby/struct:SM::Flow::P 
  body: "@example empty"
- !ruby/struct:SM::Flow::VERB 
  body: "  data = GPGME::Data.new\n  data.write(&quot;stuff&quot;)\n"
- !ruby/struct:SM::Flow::P 
  body: "@example from a string"
- !ruby/struct:SM::Flow::VERB 
  body: "  data = GPGME::Data.new(&quot;From a string&quot;)\n"
- !ruby/struct:SM::Flow::P 
  body: "@example from a file"
- !ruby/struct:SM::Flow::VERB 
  body: "  data = GPGME::Data.new(File.open(&quot;secure.pass&quot;))\n"
- !ruby/struct:SM::Flow::P 
  body: "@example from a file descriptor"
- !ruby/struct:SM::Flow::VERB 
  body: "  data = GPGME::Data.new(0) # Standard input\n  data = GPGME::Data.new(1) # Standard output\n\n  file = File.open(&quot;secure.pass&quot;)\n  data = GPGME::Data.new(file.fileno) # file descriptor\n"
full_name: GPGME::Data::new
is_singleton: true
name: new
params: (object = nil)
visibility: public
